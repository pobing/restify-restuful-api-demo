// Generated by CoffeeScript 1.9.3
(function() {
  var db, mongojs, restify, server;

  restify = require('restify');

  mongojs = require('mongojs');

  db = mongojs('products_db', ['products']);

  server = restify.createServer();

  server.use(restify.acceptParser(server.acceptable));

  server.use(restify.queryParser());

  server.use(restify.bodyParser());

  server.listen(3000, function() {
    return console.log("server listen 3000 ");
  });

  server.get('/products', function(req, res, next) {
    db.products.find(function(err, products) {
      res.writeHead(200, {
        'Content-Type': 'application/json; charset=utf-8'
      });
      return res.end(JSON.stringify(products));
    });
    return next();
  });

  server.post('/products', function(req, res, next) {
    var product;
    product = req.params;
    db.products.save(product, function(err, data) {
      res.writeHead(200, {
        'Content-Type': 'application/json; charset=utf-8'
      });
      return res.end(JSON.stringify(data));
    });
    return next();
  });

  server.put('/products/:id', function(req, res, next) {
    db.products.findOne({
      id: req.params.id
    }, function(err, data) {
      var i, n, product;
      product = {};
      for (i in data) {
        product[i] = data[i];
      }
      for (n in req.params) {
        product[n] = req.params[n];
      }
      return db.products.update({
        id: req.params.id
      }, product, {
        multi: false
      }, function(err, data) {
        res.writeHead(200, {
          'Content-Type': 'application/json; charset=utf-8'
        });
        return res.end(JSON.stringify(data));
      });
    });
    return next();
  });

  server.del('/products/:id', function(req, res, next) {
    db.products.remove({
      id: req.params.id
    }, function(err, data) {
      res.writeHead(200, {
        'Content-Type': 'application/json; charset=utf-8'
      });
      return res.end(JSON.stringify(true));
    });
    return next();
  });

  server.get('/products/:id', function(req, res, next) {
    db.products.findOne({
      id: req.params.id
    }, function(err, data) {
      res.writeHead(200, {
        'Content-Type': 'application/json; charset=utf-8'
      });
      return res.end(JSON.stringify(data));
    });
    return next();
  });

  module.exports = server;

}).call(this);
